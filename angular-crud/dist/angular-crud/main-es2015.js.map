{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/commons.module.ts","webpack:///./src/app/commons/home/home.component.html","webpack:///./src/app/commons/home/home.component.ts","webpack:///./src/app/commons/navbar/navbar.component.html","webpack:///./src/app/commons/navbar/navbar.component.ts","webpack:///./src/app/commons/notfound/notfound.component.html","webpack:///./src/app/commons/notfound/notfound.component.ts","webpack:///./src/app/commons/side-navbar/side-navbar.component.html","webpack:///./src/app/commons/side-navbar/side-navbar.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/member/member-add/member-add.component.html","webpack:///./src/app/member/member-add/member-add.component.ts","webpack:///./src/app/member/member-list/member-list.component.html","webpack:///./src/app/member/member-list/member-list.component.ts","webpack:///./src/app/member/member.module.ts","webpack:///./src/app/member/member/member.component.html","webpack:///./src/app/member/member/member.component.ts","webpack:///./src/app/shared/guards/auth.guard.ts","webpack:///./src/app/shared/services/api.service.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/users/login/login.component.html","webpack:///./src/app/users/login/login.component.ts","webpack:///./src/app/users/register/register.component.html","webpack:///./src/app/users/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './commons/home/home.component';\r\nimport { MemberListComponent } from './member/member-list/member-list.component';\r\nimport { MemberComponent } from './member/member/member.component';\r\nimport { NotfoundComponent } from './commons/notfound/notfound.component';\r\nimport { MemberAddComponent } from './member/member-add/member-add.component';\r\nimport { LoginComponent } from './users/login/login.component';\r\nimport { RegisterComponent } from './users/register/register.component';\r\nimport { AuthGuard } from './shared/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path:'', redirectTo:'home', pathMatch:'full'},\r\n  {path:'home', component: HomeComponent},\r\n  {path:'members', component: MemberListComponent, canActivate: [AuthGuard] },\r\n  {path:'users/login', component: LoginComponent },\r\n  {path:'users/register', component: RegisterComponent },\r\n  {path:'members/:id', component: MemberComponent},\r\n  {path:'addMember', component: MemberAddComponent},\r\n  {path:'**', component: NotfoundComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<mat-sidenav-container>\r\n  <mat-sidenav #sidenav role=\"navigation\">\r\n    <!--this is a place for us to add side-nav code-->\r\n    <app-side-navbar (sidenavClose)=\"sidenav.close()\"></app-side-navbar>\r\n\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n      <app-navbar  (sidenavToggle)=\"sidenav.toggle()\"></app-navbar>\r\n    <!--in here all the content must reside. We will add a navigation header as well-->\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-crud';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule } from '@angular/common/http'\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CommonsModule } from './commons/commons.module';\r\nimport { MemberModule } from './member/member.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MaterialModule } from './material/material.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    CommonsModule,\r\n    MemberModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [FormBuilder],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { SideNavbarComponent } from './side-navbar/side-navbar.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NavbarComponent, HomeComponent, NotfoundComponent, SideNavbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [NavbarComponent, HomeComponent, NotfoundComponent, SideNavbarComponent]\r\n})\r\nexport class CommonsModule { }\r\n","<p>home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <div fxHide.gt-xs>\r\n      <button mat-icon-button (click)=\"onToggleSidenav()\">\r\n          <mat-icon>menu</mat-icon>\r\n      </button>\r\n  </div>\r\n  <div fxFlex fxLayout fxLayoutAlign=\"start\">\r\n      <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\r\n<li>\r\n      <a routerLink=\"/home\">home</a>\r\n</li>\r\n  <li>\r\n      <a routerLink=\"/members\">members</a>\r\n  </li>\r\n      </ul>\r\n      </div>\r\n  <div fxFlex fxLayout fxLayoutAlign=\"end\" fxHide.xs>\r\n      <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation-items\">\r\n          <li *ngIf=\"!isLogged\">\r\n              <a routerLink=\"users/login\">Login</a>\r\n          </li>\r\n          <li *ngIf=\"!isLogged\">\r\n              <a routerLink=\"users/register\">Register</a>\r\n          </li>\r\n          <li *ngIf=\"isLogged\">\r\n              <a routerLink=\"home\" (click)=\"onLogout()\">Logout</a>\r\n          </li>\r\n      </ul>\r\n  </div>\r\n</mat-toolbar>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Output() public sidenavToggle = new EventEmitter();\r\n  public isLogged = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router){}\r\n\r\n  ngOnInit(){\r\n    this.onCheckUser();\r\n\r\n  }\r\n  public onLogout(): void {\r\n    this.authService.logoutUser();\r\n    this.isLogged = false;\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  public onCheckUser(): void {\r\n    this.authService.isLogged.subscribe(value => this.isLogged = value);\r\n  }\r\n\r\n  public onToggleSidenav(): void {\r\n    this.sidenavToggle.emit();\r\n  }\r\n\r\n\r\n}\r\n","<p>notfound works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.css']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-nav-list>\r\n    <a mat-list-item routerLink=\"/home\" (click)=\"onSidenavClose()\">\r\n        <mat-icon>home</mat-icon> <span class=\"nav-caption\">Home</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"/members\" (click)=\"onSidenavClose()\">\r\n        <mat-icon>assignment_ind</mat-icon> <span class=\"nav-caption\">Members</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"#\" (click)=\"onSidenavClose()\">\r\n        <mat-icon>account_balance</mat-icon><span class=\"nav-caption\">New Member</span>\r\n    </a>\r\n  </mat-nav-list>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-side-navbar',\r\n  templateUrl: './side-navbar.component.html',\r\n  styleUrls: ['./side-navbar.component.css']\r\n})\r\nexport class SideNavbarComponent implements OnInit {\r\n\r\n  @Output() sidenavClose = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public onSidenavClose = () => {\r\n    this.sidenavClose.emit();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatCheckboxModule,\r\n        MatListModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatFormFieldModule,\r\n        MatMenuModule,\r\n        MatCardModule,\r\n        MatInputModule} from '@angular/material';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule\r\n     ],\r\n  exports: [MatButtonModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    FlexLayoutModule],\r\n  declarations: []\r\n})\r\nexport class MaterialModule { }\r\n","<div class=\"example-container\">\r\n  <form mat-form fxLayout=\"column\">\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Nombre</mat-label>\r\n      <input matInput [(ngModel)]=userData.nombre name=\"nombre\" placeholder=\"Nombre\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Género</mat-label>\r\n      <input matInput  [(ngModel)]=userData.genero name=\"genero\" placeholder=\"Género\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Activo</mat-label>\r\n      <input matInput  [(ngModel)]=userData.activo name=\"activo\" placeholder=\"S|N\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Email</mat-label>\r\n      <input matInput  [(ngModel)]=userData.email name=\"email\" placeholder=\"Mail\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Dirección</mat-label>\r\n      <input matInput  [(ngModel)]=userData.direccion name=\"direccion\"\r\n        placeholder=\"Dirección\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Población</mat-label>\r\n      <input matInput [(ngModel)]=userData.poblacion name=\"poblacion\"\r\n        placeholder=\"Población\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <!-- <mat-form-field> -->\r\n      <mat-label>Teléfono</mat-label>\r\n      <input matInput [(ngModel)]=userData.telefono name=\"telefono\" placeholder=\"Teléfono\">\r\n      <!-- <mat-hint>Hint</mat-hint> -->\r\n          <mat-divider></mat-divider>\r\n    <!-- </mat-form-field> -->\r\n    <mat-divider></mat-divider>\r\n    <mat-form-field><button mat-button (click)=\"addMember()\">\r\n        <mat-icon>save</mat-icon>Enviar</button></mat-form-field>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService} from 'src/app/shared/services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { Member } from 'src/app/shared/classes/member';\r\n\r\n@Component({\r\n  selector: 'app-member-add',\r\n  templateUrl: './member-add.component.html',\r\n  styleUrls: ['./member-add.component.css']\r\n})\r\nexport class MemberAddComponent implements OnInit {\r\n  public member: Member;\r\n\r\n  public userData: Member = {\r\n    id: this.uniqueID(),\r\n    nombre: '',\r\n    genero: '',\r\n    activo: '',\r\n    email: '',\r\n    direccion: '',\r\n    poblacion: '',\r\n    telefono: ''\r\n  };\r\n  constructor(private apiService: ApiService, private router: Router) { }\r\n\r\n  private uniqueID() {    const thisMS: number = Date.now();\r\n                          const shake = Math.random();\r\n                          let unique: string = Math.pow(thisMS, shake).toString();\r\n                          unique = unique.toString().replace('.', thisMS.toString());\r\n                          return unique; }\r\n  ngOnInit() {\r\n  }\r\n  addMember() {\r\n    this.member = Object.assign({}, this.userData);\r\n    this.apiService.addMember$(this.member)\r\n      .subscribe(res => {\r\n        const id = res.id;\r\n        this.router.navigate(['/members', id]);\r\n      },\r\n      (err) => {console.log(err); });\r\n  }\r\n\r\n}\r\n","<mat-nav-list>\r\n  <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"15px\">\r\n  <mat-list-item *ngFor=\"let member of members\">\r\n    <a matLine [routerLink]=\"['/members',member.id]\" routerLinkActive=\"router-link-active\" >{{member.nombre}}</a>\r\n    <button mat-icon-button (click)=\"deleteMember(member.id)\">\r\n      <mat-icon>delete</mat-icon>\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n  </mat-list-item>\r\n</div>\r\n</mat-nav-list>\r\n\r\n\r\n<button mat-raised-button [routerLink]=\"['/addMember']\">Añadir miembro</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/shared/services/api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n\r\n  members$: Observable<any>;\r\n  members;\r\n  data:any;\r\n  constructor(private apiService: ApiService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getMembers();\r\n  }\r\n\r\n  getMembers(){\r\n    this.apiService.getMembers$().subscribe(e => this.members = e);\r\n  }\r\n\r\n  deleteMember(id){\r\n    this.apiService.deleteMember$(id).subscribe(data => {\r\n      this.data = data;\r\n      this.getMembers();\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MemberListComponent } from './member-list/member-list.component';\r\nimport { MemberComponent } from './member/member.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MemberAddComponent } from './member-add/member-add.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../material/material.module';\r\n@NgModule({\r\n  declarations: [\r\n    MemberComponent,\r\n    MemberListComponent,\r\n    MemberAddComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [MemberComponent,\r\n    MemberListComponent,\r\n    MemberAddComponent]\r\n})\r\nexport class MemberModule { }\r\n","<p>{{member.nombre}}</p>\r\n<p>{{member.direccion}}</p>\r\n\r\n{{member |json}}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService} from 'src/app/shared/services/api.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Member } from 'src/app/shared/classes/member';\r\n\r\n@Component({\r\n  selector: 'app-member',\r\n  templateUrl: './member.component.html',\r\n  styleUrls: ['./member.component.css']\r\n})\r\nexport class MemberComponent implements OnInit {\r\n  public member: Member;\r\n  public identifier: any;\r\n\r\n  constructor(private apiService: ApiService, private route: ActivatedRoute, private routes: Router) {\r\n\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(miParams => {this.identifier = miParams.id; });\r\n    this.apiService.getMember$(this.identifier).subscribe(e => this.member = e);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n  canActivate() {\r\n    if (this.authService.getToken()) {\r\n      // login TRUE\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/users/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {tap, catchError} from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { Member } from '../classes/member';\r\nimport { environment} from '../../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private apiURL= environment.API_URL+'/clientes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMembers$() {\r\n    //this.apiURL +='/clientes';\r\n    return this.http.get(this.apiURL);\r\n  }\r\n\r\n  getMember$(id: string) {\r\n    //this.apiURL +`/clientes=/${id}`;\r\n    this.apiURL +='/'+id;\r\n    return this.http.get<Member>(this.apiURL);\r\n  }\r\n\r\n  addMember$(member:Member) {\r\n    //this.apiURL +='/clientes';\r\n    return this.http.post<Member>(this.apiURL, member)\r\n      .pipe(tap((member: Member) => console.log(`added member: id=${member.id}`)),\r\n            catchError(error => {console.log(error);\r\n                                 return throwError(error); }));\r\n  }\r\n\r\n  deleteMember$(id: string) {\r\n    //this.apiURL +=`/clientes/${id}`;\r\n    this.apiURL +='/'+ id;\r\n    return this.http.delete(this.apiURL);\r\n  }\r\n\r\n  editMember$(member:Member) {\r\n    this.apiURL +='/clientes';\r\n    return this.http.put<Member>(this.apiURL, member)\r\n      .pipe(tap((member: Member) => console.log(`edited member: id=${member.id}`)),\r\n            catchError(error => {console.log(error);\r\n                                 return throwError(error); }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserInterface } from '../interfaces/user-interface';\r\nimport { map, tap, catchError } from 'rxjs/operators';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private authURL = environment.API_URL;\r\n  isLogged: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.getLogged());\r\n\r\n  constructor(private http: HttpClient) {}\r\n  headers: HttpHeaders = new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  registerUser(name: string, email: string, password: string) {\r\n    //const url_api = 'http://localhost:3000/register';\r\n    this.authURL += '/register';\r\n    return this.http\r\n      .post<UserInterface>(\r\n        this.authURL,\r\n        {\r\n          name,\r\n          email,\r\n          password\r\n        },\r\n        { headers: this.headers }\r\n      )\r\n      .pipe(tap(data => data),\r\n      catchError(error => {console.log(error);\r\n                           return throwError(error); }));\r\n  }\r\n\r\n  loginuser(email: string, password: string): Observable<any> {\r\n    //const url_api = 'http://localhost:3000/login';\r\n    this.authURL += '/login';\r\n    return this.http\r\n      .post<UserInterface>(\r\n        this.authURL,\r\n        { email, password },\r\n        { headers: this.headers }\r\n      )\r\n      .pipe(tap(data => {\r\n        localStorage.setItem('isLogged','true');\r\n        this.isLogged.next(true);\r\n        return data}),\r\n      catchError(error => {console.log(error);\r\n                           return throwError(error); }));\r\n  }\r\n\r\n/*   setUser(user: UserInterface): void {\r\n    let user_string = JSON.stringify(user);\r\n    localStorage.setItem(\"currentUser\", user_string);\r\n  } */\r\n\r\n  setToken(token): void {\r\n    localStorage.setItem('accessToken', token);\r\n  }\r\n\r\n  getToken() {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!(accessToken === undefined || accessToken === null)) {\r\n      return accessToken;\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n/*   getCurrentUser(): UserInterface {\r\n    let user_string = localStorage.getItem(\"currentUser\");\r\n    if (!isNullOrUndefined(user_string)) {\r\n      let user: UserInterface = JSON.parse(user_string);\r\n      return user;\r\n    } else {\r\n      return null;\r\n    }\r\n */\r\n  logoutUser() {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('isLogged');\r\n  }\r\n\r\n  getLogged():boolean{\r\n    if(localStorage.getItem('isLogged')==='true'){\r\n      return true;\r\n    }else {return false};\r\n\r\n    /* localStorage.set Item(\"isLogged\", this.user.username);\r\n    this.userType.next(this.user.username);\r\n    this._router.navigate(['/Admin']);\r\n    return true; */\r\n   }\r\n}\r\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"login-main\">\r\n\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-card>\r\n\r\n  <mat-card-header>\r\n\r\n     <mat-card-title>Login Page</mat-card-title>\r\n\r\n  </mat-card-header>\r\n\r\n  <mat-card-content fxLayout=\"column\">\r\n     <mat-form-field>\r\n\r\n       <input matInput placeholder=\"Email\" [formControl]=\"loginForm.get('email')\">\r\n\r\n     </mat-form-field>\r\n\r\n     <mat-form-field>\r\n\r\n       <input type=\"password\" matInput placeholder=\"password\" [formControl]=\"loginForm.get('password')\">\r\n\r\n     </mat-form-field>\r\n    </mat-card-content>\r\n    <mat-error *ngIf=\"(email.invalid || password.invalid)&&(email.dirty || email.touched)\">\r\n        Los campos no pueden estar vacíos\r\n     </mat-error>\r\n    <mat-card-actions align=\"end\">\r\n\r\n      <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n\r\n    </mat-card-actions>\r\n\r\n  </mat-card>\r\n</form>\r\n\r\n  </div>\r\n\r\n  {{loginForm.value |json}}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  isError: boolean = false;\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  get email() { return this.loginForm.get('email') };\r\n  get password() { return this.loginForm.get('password') };\r\n\r\n  ngOnInit() {\r\n  }\r\n  onSubmit() {\r\n    // TODO: Use EventEmitter with form value\r\n    console.log(this.loginForm.value);\r\n\r\n    return this.authService\r\n      .loginuser(this.email.value, this.password.value)\r\n      .subscribe(\r\n        data => {\r\n/*           this.authService.setUser(data.user); */\r\n          const token = data.accessToken;\r\n          this.authService.setToken(token);\r\n          this.router.onSameUrlNavigation = 'reload';\r\n          //this.router.navigate(['/']);\r\n          this.router.navigate(['/home']);\r\n\r\n\r\n          this.isError = false;\r\n        },\r\n        error => this.onIsError()\r\n      );\r\n\r\n  }\r\n  onIsError(): void {\r\n    this.isError = true;\r\n    setTimeout(() => {\r\n      this.isError = false;\r\n    }, 4000);\r\n  }\r\n}\r\n","<p>register works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: \"http://localhost:3000\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}